{"version":3,"sources":["reducers/userRed.js","actions/user.js","components/registration-and-login/registration.jsx","components/registration-and-login/Login.jsx","components/navigation-and-search-components/header.jsx","components/lists/trello.jsx","components/navigation-and-search-components/createList.jsx","App.js","reportWebVitals.js","reducers/index.js","index.js"],"names":["LOGOUT","USERS_LIST","defaultState","currentUser","isAuth","setList","user","type","payload","registration","email","password","name","a","axios","post","response","window","M","toast","html","data","message","createItem","listId","id","dispatch","localStorage","setItem","token","alert","delItem","itemId","delete","headers","Authorization","getItem","removeItem","Registration","useState","form","setForm","changeHandler","useDispatch","event","target","value","className","placeholder","onChange","htmlFor","to","onClick","Login","length","Header","props","useSelector","state","href","Trello","itemControler","setItemControler","setName","test","lists","useEffect","get","map","list","i","items","item","onDragStart","e","_id","dragStartHendler","onDragLeave","onDragEnd","onDragOver","preventDefault","dragOverHendler","onDrop","dragOnDroprHendler","draggable","CreateList","createList","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e29d9685.chunk.js","sourcesContent":["const LOGOUT = \"LOG_OUT\"\r\nconst USERS_LIST = \"USERS_LIST\"\r\n\r\n\r\n\r\nconst defaultState = {\r\n    currentUser: {},\r\n    isAuth: false,\r\n}\r\n\r\nexport default function userReducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case USERS_LIST:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload,\r\n                isAuth: true,\r\n            }\r\n        case LOGOUT:\r\n            localStorage.removeItem(\"token\")\r\n            return {\r\n                ...state,\r\n                currentUser: {},\r\n                isAuth: false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setList = user => ({ type: USERS_LIST, payload: user })\r\n\r\nexport const logOut = () => ({ type: LOGOUT })","import axios from \"axios\"\r\nimport { setUser, setList } from \"../reducers/userRed\"\r\n\r\n\r\nexport const registration = async (email, password, name) => {\r\n\r\n    try {\r\n        const response = await axios.post(\"https://reacttrelloapp.herokuapp.com/api/auth/registration\", {\r\n            email,\r\n            password,\r\n            name\r\n        })\r\n\r\n        window.M.toast({ html: response.data.message })\r\n\r\n    } catch (error) {\r\n        window.M.toast({ html: error.response.data.message })\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email, password) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.post(\"https://reacttrelloapp.herokuapp.com/api/auth/login\", {\r\n                email, password\r\n            })\r\n   \r\n            dispatch(setList(response.data))\r\n            localStorage.setItem(\"token\", response.data.token)\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function createList(id, name) {\r\n    return async dispatch => {\r\n\r\n        try {\r\n            const response = await axios.post(`https://reacttrelloapp.herokuapp.com/api/auth/list`, {\r\n                id, name\r\n            })\r\n\r\n            dispatch(setList(response.data))\r\n            localStorage.setItem(\"token\", response.data.token)\r\n\r\n        } catch (error) {\r\n            localStorage.removeItem(\"token\")\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const createItem = (listId, id, name) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.post(`https://reacttrelloapp.herokuapp.com/api/auth/createItem`, {\r\n                listId, id, name\r\n            })\r\n\r\n            dispatch(setList(response.data))\r\n\r\n            localStorage.setItem(\"token\", response.data.token)\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const Auth = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`https://reacttrelloapp.herokuapp.com/api/auth/auth`, {\r\n                headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\r\n            })\r\n\r\n            dispatch(setList(response.data))\r\n\r\n            localStorage.setItem(\"token\", response.data.token)\r\n        } catch (error) {\r\n            localStorage.removeItem(\"token\")\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const delList = (id) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.delete(`https://reacttrelloapp.herokuapp.com/api/auth/delList/${id}`, {\r\n                headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\r\n            })\r\n\r\n            dispatch(setList(response.data))\r\n\r\n            localStorage.setItem(\"token\", response.data.token)\r\n        } catch (error) {\r\n            localStorage.removeItem(\"token\")\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const delItem = (itemId) => {\r\n\r\n    return async dispatch => {\r\n\r\n        try {\r\n            const response = await axios.delete(`https://reacttrelloapp.herokuapp.com/api/auth/deleteItem/${itemId}`, {\r\n                headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\r\n            })\r\n\r\n            dispatch(setList(response.data))\r\n\r\n            localStorage.setItem(\"token\", response.data.token)\r\n        } catch (error) {\r\n            localStorage.removeItem(\"token\")\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect, useContext } from \"react\"\r\nimport { registration } from \"../../actions/user\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { textareaAutoResize } from \"materialize-css\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\n\r\nexport const Registration = () => {\r\n    const [form, setForm] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        name: \"\"\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const changeHandler = event => {\r\n\r\n        setForm({\r\n            ...form, [event.target.name]: event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <h3>Registartion</h3>\r\n                <div className=\"card blue darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n\r\n                        <div>\r\n\r\n                            <div className=\"input-field \">\r\n                                <input\r\n                                    placeholder=\"email\"\r\n                                    id=\"email\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"input-field \">\r\n                                <input\r\n                                    placeholder=\"password\"\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"password\">Password</label>\r\n                            </div>\r\n\r\n                            <div className=\"input-field \">\r\n                                <input\r\n                                    placeholder=\"you name\"\r\n                                    id=\"text\"\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"text\">Name</label>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n\r\n\r\n\r\n                        <NavLink\r\n                         to=\"/login\"\r\n                            className=\"btn yellow\"\r\n                            onClick={() => {\r\n                                registration(\r\n                                    form.email,\r\n                                    form.password,\r\n                                    form.name,\r\n                                )\r\n                            }}\r\n                        >\r\n                            Registartion\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { login } from \"../../actions/user\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nexport const Login = () => {\r\n    const [form, setForm] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const changeHandler = event => {\r\n        setForm({\r\n            ...form, [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <h3>Hello!</h3>\r\n                <div className=\"card blue darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n                        <div>\r\n                            <div className=\"input-field \">\r\n                                <input\r\n                                    placeholder=\"email\"\r\n                                    id=\"email\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                            </div>\r\n\r\n                            <div className=\"input-field \">\r\n                                <input\r\n                                    placeholder=\"password\"\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"password\">Password</label>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n\r\n\r\n                        {form.password.length < 6 ? <button\r\n                            className=\" btn greey \"\r\n                        >\r\n                            log in\r\n                        </button> : <NavLink to=\"/createList\">\r\n                            <button\r\n                                className=\" btn yellow \"\r\n                                onClick={() => dispatch(login(form.email, form.password))}\r\n                            >\r\n                                log in\r\n                            </button></NavLink>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { NavLink } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { logOut } from \"../../reducers/userRed\"\r\nimport { Auth } from \"../../actions/user\"\r\n\r\n\r\nexport const Header = (props) => {\r\n    const isAuth = useSelector(state => state.user.isAuth)\r\n    const dispatch = useDispatch()\r\n    return <div className=\"card\">\r\n      \r\n            <nav className=\"blue-grey\"  >\r\n                <a href=\"#!\" className=\"brand-logo\">   <span className=\" blue-text\">React</span>Trello </a>\r\n\r\n                <ul className=\"right hide-on-med-and-down\">\r\n\r\n                    {!isAuth && <li><NavLink to=\"/login\">Log in</NavLink></li>}\r\n                    {!isAuth && <li><NavLink to=\"/registartion\">Registartion</NavLink></li>}\r\n                    {isAuth &&\r\n                        <div className=\"button__block\">\r\n                            <NavLink \r\n                            to=\"/createList\"\r\n                            className=\"btn yellow\"\r\n                                   >\r\n                                       Add list  \r\n                            </NavLink>\r\n\r\n                            <NavLink \r\n                            to=\"/login\"\r\n                            className=\"btn  \"\r\n                            onClick={() => dispatch(logOut())}>\r\n                                   Log out\r\n                            </NavLink>\r\n                            <a className=\"btn\" target=\"_blank\"  href=\"https://github.com/VladyslavHeranin/Trello\"> \r\n                            Git Hub\r\n                            </a>\r\n                         \r\n                       \r\n                        </div>\r\n                    }\r\n                </ul>\r\n            </nav>\r\n    </div>\r\n}","import { useSelector, useDispatch } from \"react-redux\"\r\nimport { delList, createItem, delItem ,Auth } from \"../../actions/user\"\r\nimport { useState , useEffect } from \"react\"\r\n\r\n\r\nexport const Trello = (props) => {\r\n\r\n      const [itemControler , setItemControler] = useState(null)\r\n\r\n      const [name , setName] = useState(\"\")\r\n\r\n      const test = useSelector(state => state.user.currentUser)\r\n\r\n      const lists = test.lists\r\n\r\n      const currentUser = test.user\r\n\r\n        useEffect(() => {\r\n               dispatch(Auth())\r\n                }, [])\r\n\r\n\r\n  const dragStartHendler = (e, list , item) => {\r\n        setItemControler(item) \r\n        dispatch(delItem(item._id))\r\n    }\r\n\r\n    const dragLeaveHendler = (e) => {\r\n    }\r\n\r\n    const dragEndHendler = (e , card) => {\r\n    }\r\n\r\n    const dragOverHendler = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    const dragOnDroprHendler = (e, list) => {\r\n        e.preventDefault()\r\n\r\n        if(itemControler.name !== \"\"){\r\n             dispatch(createItem(list, currentUser.id, itemControler.name))\r\n        }\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className=\"list\">\r\n\r\n            {lists.map((list, i) =>\r\n            \r\n                <div className=\"row\" key={i} > \r\n    <div className=\"col s12 m12\">\r\n      <div className=\"card blue-grey darken-1\">\r\n        <div className=\"card-content white-text\">\r\n          <span className=\"card-title\">{list.name}</span> \r\n          {list.items.map((item, i) => <div key={i}\r\n\r\n                        className=\"item\"\r\n\r\n                        onDragStart={(e) => dragStartHendler(e , list._id, item)}\r\n                        onDragLeave={(e) => dragLeaveHendler(e)}\r\n                        onDragEnd={(e) => dragEndHendler(e)}\r\n                        onDragOver={(e) => dragOverHendler(e)}\r\n                        onDrop={(e) => dragOnDroprHendler(e , list._id )}\r\n\r\n                        draggable={true}\r\n                    >\r\n                        <p>{item.name}</p>\r\n\r\n                        <button  className=\"btn-floating  waves-effect waves-light red-grey\" onClick={() => dispatch(delItem(item._id))}>\r\n                        &#x2716;\r\n                          </button>\r\n                    </div>\r\n                    )\r\n                }\r\n               </div>\r\n              <div className=\"card-action\">\r\n                            <div className=\"input-field \">\r\n                                    <input\r\n                                        // placeholder=\"Name item\"\r\n                                        id=\"name\"\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        onChange={(event) =>{\r\n                                            setName(event.target.value)\r\n                                        } }\r\n                                    />\r\n                                       <label className=\"text-white\" >Name</label>\r\n                                </div>\r\n\r\n         {list.items.length === 0 && <button className=\"btn red\" onClick={() => dispatch(delList(list._id))}>Delete</button>}    \r\n\r\n\r\n         <button className=\"btn yello\" onClick={() =>{\r\n                   dispatch(createItem(list._id, currentUser.id, name))\r\n           } }>\r\n           Create\r\n           </button>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n            </div>)}\r\n\r\n        </div>\r\n    )\r\n}","import React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { createList } from \"../../actions/user\"\r\n\r\nexport const CreateList = (props) => {\r\n    const [name, setName] = useState({\r\n        name: \"\",\r\n    })\r\n\r\n    const createFormList = (event) => {\r\n        setName({\r\n            ...name, [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const user = useSelector(state => state.user.currentUser.user)\r\n\r\n    return <div>\r\n\r\n         <div className=\"card  darken-1 black-text\">\r\n            <div className=\"row\">\r\n                <div className=\"col s6 offset-s3\">\r\n                   <h3>Create list</h3>\r\n                      <div className=\"card blue darken-1\">\r\n                         <div className=\"card-content white-text\">\r\n                             <div>\r\n                                 <div className=\"input-field \">\r\n                                    <input\r\n                                        // placeholder=\"name\"\r\n                                        id=\"name\"\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        onChange={createFormList}\r\n                                    />\r\n                                    <label className=\"text-white\" >Name</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-action\">\r\n\r\n                        {name.name !== \"\" && <NavLink to=\"/trello\">\r\n                                <button\r\n                                    className=\"btn yellow\"\r\n                                    onClick={() => {\r\n                                         dispatch(createList(\r\n                                             user.id,\r\n                                             name.name,\r\n                                           ))\r\n                                    }} >\r\n                                    Add\r\n                                </button>\r\n                            </NavLink>}\r\n\r\n                            <NavLink to=\"/trello\">\r\n                                <button className=\"btn\">\r\n                                    Close\r\n                                </button>\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React, { useEffect } from \"react\"\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\r\nimport { Registration } from \"./components/registration-and-login/registration.jsx\"\r\nimport { Login } from \"./components/registration-and-login/Login.jsx\"\r\nimport { Header } from \"./components/navigation-and-search-components/header.jsx\"\r\nimport \"materialize-css\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Auth } from \"./actions/user\"\r\nimport { Trello } from \"./components/lists/trello\"\r\nimport { CreateList } from \"./components/navigation-and-search-components/createList\"\r\nimport { useState } from \"react\"\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n\r\n  const isAuth = useSelector(state => state.user.isAuth)\r\n\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"container\" >\r\n        <Header />\r\n        {!isAuth ?\r\n          <Switch>\r\n            <Route exact path={\"/registartion\"} component={Registration} />\r\n            <Route exact path={\"/login\"} component={Login} />\r\n          </Switch>\r\n          :\r\n          <Switch>\r\n            <Route exact path={\"/trello\"} >\r\n              <Trello  />\r\n            </Route>\r\n            <Route exact path={\"/createList\"}  >\r\n              <CreateList />\r\n            </Route>\r\n          </Switch>\r\n        }\r\n      </div>\r\n    </BrowserRouter >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport thunk from \"redux-thunk\"\r\nimport userReducer from \"./userRed\"\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store } from \"./reducers\"\r\nimport { Provider } from \"react-redux\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}